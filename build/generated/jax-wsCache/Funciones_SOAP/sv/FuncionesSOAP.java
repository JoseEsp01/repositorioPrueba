
package sv;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Funciones_SOAP", targetNamespace = "http://sv/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface FuncionesSOAP {


    /**
     * 
     * @param valor
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "euroDolar", targetNamespace = "http://sv/", className = "sv.EuroDolar")
    @ResponseWrapper(localName = "euroDolarResponse", targetNamespace = "http://sv/", className = "sv.EuroDolarResponse")
    @Action(input = "http://sv/Funciones_SOAP/euroDolarRequest", output = "http://sv/Funciones_SOAP/euroDolarResponse")
    public Double euroDolar(
        @WebParam(name = "valor", targetNamespace = "")
        double valor);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://sv/", className = "sv.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://sv/", className = "sv.HelloResponse")
    @Action(input = "http://sv/Funciones_SOAP/helloRequest", output = "http://sv/Funciones_SOAP/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param exponente
     * @param base
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "potencia", targetNamespace = "http://sv/", className = "sv.Potencia")
    @ResponseWrapper(localName = "potenciaResponse", targetNamespace = "http://sv/", className = "sv.PotenciaResponse")
    @Action(input = "http://sv/Funciones_SOAP/potenciaRequest", output = "http://sv/Funciones_SOAP/potenciaResponse")
    public double potencia(
        @WebParam(name = "base", targetNamespace = "")
        double base,
        @WebParam(name = "exponente", targetNamespace = "")
        double exponente);

    /**
     * 
     * @param palabra
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "diccionario", targetNamespace = "http://sv/", className = "sv.Diccionario")
    @ResponseWrapper(localName = "diccionarioResponse", targetNamespace = "http://sv/", className = "sv.DiccionarioResponse")
    @Action(input = "http://sv/Funciones_SOAP/diccionarioRequest", output = "http://sv/Funciones_SOAP/diccionarioResponse")
    public String diccionario(
        @WebParam(name = "palabra", targetNamespace = "")
        String palabra);

    /**
     * 
     * @param numero
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "numeroPrimo", targetNamespace = "http://sv/", className = "sv.NumeroPrimo")
    @ResponseWrapper(localName = "numeroPrimoResponse", targetNamespace = "http://sv/", className = "sv.NumeroPrimoResponse")
    @Action(input = "http://sv/Funciones_SOAP/numeroPrimoRequest", output = "http://sv/Funciones_SOAP/numeroPrimoResponse")
    public String numeroPrimo(
        @WebParam(name = "numero", targetNamespace = "")
        double numero);

}
